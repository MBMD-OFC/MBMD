let handler = async (m, { conn, args, text, usedPrefix, command }) => {
let who;
if (m.isGroup) who = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text;
else who = m.chat;
let name = await conn.getName(m.sender);	
let user = global.db.data.users[who];
if (!global.db.data.settings[conn.user.jid].restrict) return conn.reply(m.chat, `âœŽ _Este comando esta desactivado por las restricciones._\nâ€¢ _Puedes pedirle al creador del bot que active el comando._\n\n> *Contacto:*\n- @${global.owner[0][0]}`, {quoted: m}) 
if (!text) return conn.reply(m.chat, `âœŽ _Ingrese el comando y escriba o pegue el numero de *WhatsApp* de la persona que quieres invitarlo al grupo._\nâ€¢ _Recuerda no agregar el simbolo internacional ( + )_\n\nâ€¢ *Por ejemplo:*\n*#${command}* 5493973273727`, { quoted: m })
if (text.includes('+')) return conn.reply(m.chat, `âœŽ _Por favor, asegurese de no agregar el simbolo internacional ( + ) al escribir el numero._\nâ€¢ _Hagalo de esta manera facil._\n\nâ€¢ *Por ejemplo:*\n*#${command}* 5493873675737`, { quoted: m })
let group = m.chat;
let link = 'https://chat.whatsapp.com/' + await conn.groupInviteCode(group);
await conn.reply(text+'@s.whatsapp.net', `_Holaa, soy MBMD, estoy aqui por que un usuario llamado ${name} te invito a su grupo._\nâ€¢ _Â¡En hora especial, te esperamos hoy dia, estoy seguro de que encontraras buenas personas!_\n\nâ€¢ \`INFORMACION:\`\n_En este grupo estoy alojado, soy un bot de *WhatsApp*, podras pedirme cosas en este grupo si entras._\n\nâœ“ _Bot activo 24/7._\nâœ“ _Comandos gratis._\nâœ“ _Sin registro o inicio de sesion._\nâœ“ _Metodos de descargas._\nâœ“ _Chat GPT._\nâœ“ _Entretenimiento y mÃ¡s._\n\n> *_Enlace grupal:_*\nðŸœ¸ h${link}\n\n- _Â¡Ven a saber mas!_`, m, {mentions: [m.sender]});
conn.reply(m.chat, `âœ“ _Se ha enviado la solicitud al usuario:_ @${who.split`@`[0]}\nâ€¢ _Ahora a esperar a que el usuario acceda._`, { quoted: m });
};
handler.command = /^(add|agregar)$/i;
handler.group = true;
handler.botAdmin = true;
handler.fail = null;
export default handler;
